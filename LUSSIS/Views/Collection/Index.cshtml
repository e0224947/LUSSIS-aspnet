@model LUSSIS.Models.Disbursement

@{
    ViewBag.Title = "Upcoming Collection";
}

<h2>Upcoming Collection</h2>
<hr/>

@if (@Model == null || @Model.DisbursementDetails.Count == 0)
{
    <div class="alert alert-dismissible alert-info">
        <br/>
        <strong>No disbursement to be collected at the moment.</strong> <br/><br/>
    </div>
}
else
{
    <table class="table table-dark">
        <tr class="table-active">
            <th>
                @Html.DisplayNameFor(model => model.CollectionDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CollectionPoint.CollectionName)

            </th>
        </tr>
        <tr class="table-dark">
            <td>
                @Html.DisplayFor(model => model.CollectionDate)&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.CollectionPoint.Time)
            </td>
            <td>
                @Html.DisplayFor(model => model.CollectionPoint.CollectionName)
            </td>
        </tr>

    </table>

    <h5>Items to be collected</h5>
    <table class="table table-hover">
        <tr class="table-active">
            <th>
                @Html.DisplayNameFor(model => model.DisbursementDetails.First().Stationery.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DisbursementDetails.First().Stationery.UnitOfMeasure)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DisbursementDetails.First().RequestedQty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DisbursementDetails.First().ActualQty)
            </th>
        </tr>

        @foreach (var item in Model.DisbursementDetails)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Stationery.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stationery.UnitOfMeasure)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RequestedQty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActualQty)
                </td>
            </tr>
        }
    </table>
}

@*Authors: Ong Xin Ying*@