@model LUSSIS.Models.WebDTO.AdjustmentVoucherDTO

@{
    ViewBag.Title = "Create Adjustment";
}

<h2>Create Stock Adjustment</h2>
<hr/>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <div class="form-group">
            @Html.LabelFor(model => model.ItemNum, "Item Code:", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ItemNum, new {@class = "form-control col-md-4", @readonly = true})

            </div>
        </div>
        @Html.HiddenFor(m => m.ItemNum)


        <div class="form-group">
            @Html.LabelFor(model => model.Stationery.Description, "Item Description:", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Stationery.Description, new {@class = "form-control col-md-4", @readonly = true})
            </div>
        </div>
        @Html.HiddenFor(m => m.Stationery.Description)
        <div class="form-group">
            @Html.LabelFor(model => model.Stationery.UnitOfMeasure, "UOM", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Stationery.UnitOfMeasure, new {@class = "form-control col-md-4", @readonly = true})
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Adjustment Type: ", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="btn-group" data-toggle="buttons">
                    <label class="btn btn-outline-info" style="width: 4rem">
                        @Html.RadioButtonFor(model => model.Sign, false) -
                    </label>

                    <label class="btn btn-outline-info" style="width: 4rem">
                        @Html.RadioButtonFor(model => model.Sign, true) +
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.Sign, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new {htmlAttributes = new {@class = "form-control col-md-4", @onkeydown = "false", @min = "1"}})
                @Html.ValidationMessageFor(model => model.Quantity, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reason, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Reason, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Reason, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit Adjustment" class="btn btn-success"/>
                @Html.ActionLink("Back to List", "Index", "Stationeries", null, new {@class = "btn btn-secondary"})
            </div>
        </div>
    </div>
}

@*Authors: Koh Meng Guan*@